name: flutter_package_workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  workflow_call:

    inputs:
      package_name:
        required: true
        type: string

      coverage_excludes:
        required: false
        type: string
        default: "**/*.g.dart **/*.gen.dart **/*.freezed.dart"
      flutter_channel:
        required: false
        type: string
        default: "beta"
      flutter_version:
        required: false
        type: string
        default: ""
      is_pull_request:
        required: false
        type: boolean
        default: github.event_name == 'pull_request'
      min_coverage:
        required: false
        type: number
        default: 95
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"
      test_optimization:
        required: false
        type: boolean
        default: true
      test_recursion:
        required: false
        type: boolean
        default: false

jobs:
  verify-flutter-package:
    name: ✅ Verify Flutter ${{ inputs.package_name }} Package
    defaults:
      run:
        working-directory: packages/${{ inputs.package_name }}

    runs-on: ${{inputs.runs_on}}
    timeout-minutes: 15

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2.8.0
        with:
          cache: true
          channel: ${{ inputs.flutter_channel }}
          flutter-version: ${{ inputs.flutter_version }}
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}

      - name: 📦 Install Dependencies
        run: flutter pub get

      # TODO: No support for sealed classes in formatter now.
      # - name: ✨ Check Formatting
      #   if: ${{ inputs.is_pull_request }}
      #   run: flutter format --set-exit-if-changed .

      - name: 🕵️ Analyze Code
        uses: invertase/github-action-dart-analyzer@v1
        if: ${{ inputs.is_pull_request }}
        with:
          fatal-warnings: true
          fatal-infos: true

      - name: 🔎 Dart Code Metrics
        uses: dart-code-checker/dart-code-metrics-action@v3
        if: ${{ inputs.is_pull_request }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          folders: "lib, test"
          pull_request_comment: true
          check_unused_files: true
          fatal_performance: true
          fatal_warnings: true
          fatal_style: true

      - name: 🧪 Run Tests
        run: flutter test --no-pub --coverage --enable-experiment=sealed-class

      - name: 📊 Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2.1.0
        if: ${{ inputs.is_pull_request }}
        with:
          path: packages/${{ inputs.package_name }}/coverage/lcov.info
          exclude: ${{ inputs.coverage_excludes }}
          min_coverage: ${{ inputs.min_coverage }}

      - name: 💯 Upload Coverage
        uses: codecov/codecov-action@v3
        if: ${{ !inputs.is_pull_request }}
        with:
          flags: ${{ inputs.package_name }}
          name: ${{ inputs.package_name }}
          token: ${{ secrets.CODECOV_TOKEN }}